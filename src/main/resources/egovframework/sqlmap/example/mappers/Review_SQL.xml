<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.example.review.service.impl.ReviewMapper">


	<!-- 게시판 목록조회  -->
	<select id="reviewlist" resultType="reviewVO">
		SELECT 
        	    review_no
			  , review_title
			  , review_writer
			  , review_content
			  , review_created_at 
		  FROM tb_review
		  <where>
		      <if test="(sname != null) and (!sname.equals(''))">
		           <choose>
				         <when test="searchKey eq 're_title'.toString()">
				                and review_title LIKE CONCAT('%', #{sname}, '%')
				         </when>
				         <when test="searchKey eq 're_content'.toString()">
				                and review_content LIKE CONCAT('%', #{sname}, '%')
				         </when>
				         <otherwise>
				                and ( review_title LIKE CONCAT('%', #{sname}, '%') or review_content LIKE CONCAT('%', #{sname}, '%') )
				         </otherwise>
			   		</choose>
		      </if>
		  </where>
		ORDER BY review_no DESC
		LIMIT #{pageSize}
		OFFSET #{pageindex}
	</select>
	
	<!-- 게시판 목록 카운트 조회 -->
	<select id="countreviewlist" resultType="int">
		SELECT COUNT(*)
		  FROM tb_review
		  		  <where>
		      <if test="(sname != null) and (!sname.equals(''))">
		           <choose>
				         <when test="searchKey eq 're_title'.toString()">
				                and review_title LIKE CONCAT('%', #{sname}, '%')
				         </when>
				         <when test="searchKey eq 're_content'.toString()">
				                and review_content LIKE CONCAT('%', #{sname}, '%')
				         </when>
				         <otherwise>
				                and ( review_title LIKE CONCAT('%', #{sname}, '%') or review_content LIKE CONCAT('%', #{sname}, '%') )
				         </otherwise>
			   		</choose>
		      </if>
		  </where>
	</select>
	
	<!-- 게시판 한건 조회 -->
	<select id="reviewselectone" parameterType="Integer" resultType="reviewVO">
		SELECT
		        review_no
		      , review_title
		      , review_writer
		      , review_content
		      , review_created_at
		  FROM tb_review
		 WHERE review_no = #{review_no}
	</select>
	
	<!-- 게시판 글생성 -->
	<insert id="reviewinsert" parameterType="egovframework.example.review.service.ReviewVO">
        INSERT INTO tb_review
        			(review_title, review_writer, review_password, review_content, review_created_at)
        VALUES
        			(#{review_title}, #{review_writer}, #{review_password}, #{review_content}, now())
    </insert>
    
    <!-- 게시판 글수정 -->
    <update id="reviewupdate" parameterType="egovframework.example.review.service.ReviewVO">
        UPDATE tb_review SET
			   review_title = #{review_title}, review_content = #{review_content}
		WHERE review_no = #{review_no}
    </update>
    
    <!-- 게시판 글삭제 -->
    <delete id="reviewdelete" parameterType="Integer">
    	DELETE FROM tb_review
		WHERE review_no = #{review_no}
    </delete>
	

</mapper>